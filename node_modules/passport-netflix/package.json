{
  "name": "passport-netflix",
  "version": "0.1.2",
  "description": "Netflix authentication strategy for Passport.",
  "keywords": [
    "passport",
    "netflix",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-netflix.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-netflix/issues"
  },
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-netflix",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "~0.1.1",
    "xml2js": "0.1.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport-Netflix\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [Netflix](http://www.netflix.com/) using the OAuth 1.0a API.\n\nThis module lets you authenticate using Netflix in your Node.js applications.\nBy plugging into Passport, Netflix authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-netflix\n\n## Usage\n\n#### Configure Strategy\n\nThe Netflix authentication strategy authenticates users using a Netflix account\nand OAuth tokens.  The strategy requires a `verify` callback, which accepts\nthese credentials and calls `done` providing a user, as well as `options`\nspecifying a consumer key, consumer secret, and callback URL.\n\n    passport.use(new NetflixStrategy({\n        consumerKey: NETFLIX_API_KEY,\n        consumerSecret: NETFLIX_API_SHARED_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/netflix/callback\"\n      },\n      function(token, tokenSecret, profile, done) {\n        User.findOrCreate({ netflixId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'netflix'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/netflix',\n      passport.authenticate('netflix'));\n    \n    app.get('/auth/netflix/callback', \n      passport.authenticate('netflix', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-netflix/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-netflix.png)](http://travis-ci.org/jaredhanson/passport-netflix)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "_id": "passport-netflix@0.1.2",
  "dist": {
    "shasum": "42558ac170c0d485ca29b4813cbb0ec7e83cd44f",
    "tarball": "http://registry.npmjs.org/passport-netflix/-/passport-netflix-0.1.2.tgz"
  },
  "_npmVersion": "1.1.62",
  "_npmUser": {
    "name": "jaredhanson",
    "email": "jaredhanson@gmail.com"
  },
  "maintainers": [
    {
      "name": "jaredhanson",
      "email": "jaredhanson@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "42558ac170c0d485ca29b4813cbb0ec7e83cd44f",
  "_from": "passport-netflix@",
  "_resolved": "https://registry.npmjs.org/passport-netflix/-/passport-netflix-0.1.2.tgz"
}
